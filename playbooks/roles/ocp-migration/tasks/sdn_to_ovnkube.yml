---

- name: Check if cluster operators and nodes are healthy
  include_role:
    name: check-cluster-health

- name: Check if the cluster configured with the OpenShift SDN
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Network
    name: cluster
  register: network_provider

- debug:
    msg: "NetworkType is: {{ network_provider.resources[0].status.networkType }}"
  failed_when: "'OpenShiftSDN' not in network_provider.resources[0].status.networkType"

- name: Check if machine config pool is in updated state 
  shell: oc get machineconfigpool --no-headers | awk '{ print $3 $4 $5 }' | grep -wv TrueFalseFalse | wc -l
  register: unhealthy_mcp
  failed_when: unhealthy_mcp.stdout|int != 0

- name: Take backup of the network operator
  shell: 'oc get Network.config.openshift.io cluster -o yaml > /root/cluster-openshift-sdn.yaml'

- name: Set the migration field on the Cluster Network Operator configuration
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operator.openshift.io/v1
      kind: Network
      metadata:
        name: cluster
      spec:
        migration:
          networkType: OVNKubernetes

- name: Check if the node are rebooting
  shell: oc get nodes --no-headers | grep -w 'SchedulingDisabled\|NotReady' | wc -l
  register: updating_nodes
  until: updating_nodes.stdout|int > 0
  retries: 10
  delay: 60

- name: Check if the machine config pool has updated 
  shell: oc get machineconfigpool --no-headers | awk '{ print $3 $4 $5 }' | grep -wv TrueFalseFalse | wc -l
  register: unhealthy_mcp
  until: unhealthy_mcp.stdout|int == 0
  retries: 30
  delay: 120

- name: Check if all machine config pods are in Running state
  shell: oc get pod -n openshift-machine-config-operator --no-headers | grep -v Running | wc -l
  register: unhealthy_pods
  until: unhealthy_pods.stdout|int == 0
  retries: 10
  delay: 120

- debug:
    msg: "Some machine config pods are not in good state"
  when: unhealthy_pods.stdout|int != 0 

- name: Configure the OVNKubernetes cluster network provider to start migration 
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: config.openshift.io/v1
      kind: Network
      metadata:
        name: cluster
      spec:
        networkType: OVNKubernetes

- name: Wait until the multus daemon set pods restart
  shell: oc -n openshift-multus rollout status daemonset/multus
  register: pod_restart_status
  until: pod_restart_status.stdout is search("successfully rolled out")
  retries: 10
  delay: 20

- name: Register ocp nodes hostname
  shell: oc get nodes -o jsonpath='{.items[*].status.addresses[?(@.type=="Hostname")].address}'
  register: nodes

- name: Reboot nodes to apply changes
  shell: |
    for hostname in {{ nodes.stdout }}; do
      ssh -o StrictHostKeyChecking=no core@${hostname} sudo shutdown -r -t 3
      sleep 2m
      export nodestatus=$(oc get nodes | grep ${hostname} | grep -w Ready | wc -l)
      while [[ ${nodestatus} -ne 1 ]]
      do
        sleep 20s
        nodestatus=$(oc get nodes | grep ${hostname} | grep -w Ready | wc -l)
      done
    done
  args:
    executable: /bin/bash

- name: Check all cluster operators are in 'Available' state and not in 'Progressing' or 'Degraded' state
  shell: oc get co --no-headers | awk '{ print $3 $4 $5 }' | grep -w -v TrueFalseFalse | wc -l
  register: cluster_operator_count
  until: cluster_operator_count.stdout | int == 0
  retries: 20
  delay: 120
  ignore_errors: yes

- name: Fail when cluster operators are not in good status
  fail:
    msg: "Cluster operators are not in good status after migration"
  when: 0 < cluster_operator_count.stdout|int or  0 < cluster_operator_count.stdout|int

- name: Check if all pods are in running state
  shell: oc get pods --all-namespaces --no-headers| grep -w -v 'Running\|Completed' | wc -l
  register: unhealthy_pods
  until: unhealthy_pods.stdout|int == 0
  retries: 5
  delay: 30
 
- name: Check if the cluster network provider has updated to OVNKubernetes
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Network
    name: cluster
  register: network_provider

- debug:
    msg: "NetworkType is: {{ network_provider.resources[0].status.networkType }}"
  failed_when: "'OVNKubernetes' not in network_provider.resources[0].status.networkType"

- name: Remove the migration configuration from the CNO configuration object
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operator.openshift.io/v1
      kind: Network
      metadata:
        name: cluster
      spec:
        migration: null

- name: Remove custom configuration for the OpenShift SDN network provider
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operator.openshift.io/v1
      kind: Network
      metadata:
        name: cluster
      spec:
        defaultNetwork:
          openshiftSDNConfig: null

- name: Delete the openshift-sdn namespace
  kubernetes.core.k8s:
    state: absent
    kind: Namespace
    name: openshift-sdn
