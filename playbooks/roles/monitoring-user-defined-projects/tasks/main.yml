---

## Enabling monitoring to user-defined-projects

- name: Install the Development tools
  shell: yum groupinstall -y 'Development tools' 

- name: Resource deployment for monitoring-user-defined-projects
  include_tasks: "{{ role_path }}/tasks/deployment.yml"

- name: Create cluster-monitering-config ConfigMap for enabling the user-workload-monitoring
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: cluster-monitoring-config
        namespace: openshift-monitoring
      data:
        config.yaml: |
          enableUserWorkload: true

- name: Check if the pods are running in openshift-user-workload-monitoring namespace
  shell: oc get po -n openshift-user-workload-monitoring --no-headers | awk '{ print $3 }' | grep 'Running' | wc -l
  register: user_workload_monitoring_pods
  until: user_workload_monitoring_pods.stdout|int == 5
  retries: 5
  delay: 30

- name: Wait for another three minutes
  wait_for:
    timeout: 180

- name: Accessing metrics outside the cluster
  block:
    - name: Extract the secret used to retrieve the token
      shell: "oc get secret -n openshift-user-workload-monitoring | grep  prometheus-user-workload-token | head -n 1 | awk '{ print $1 }'"
      register: token_secret

    - name: Extract token to connect to prometheus
      shell: "echo $(oc get secret {{ SECRET }} -n openshift-user-workload-monitoring -o json | jq -r '.data.token') | base64 -d"
      vars:
        SECRET: "{{ token_secret.stdout.strip('\"') }}"
      register: access_token
    
    - name: Extract the thanos-querier route host
      k8s_info:
        api_version: route.openshift.io/v1
        kind: Route
        name: thanos-querier
        namespace: openshift-monitoring
      register: thanos_querier_route_host

    - name: Query the metrics of user defined services in the command line
      shell: | 
        curl -X GET -kG "https://{{ THANOS_QUERIER_HOST }}/api/v1/query?" --data-urlencode "query=up{namespace='{{ NAMESPACE }}'}" -H "Authorization: Bearer {{ TOKEN }}"
      vars: 
        THANOS_QUERIER_HOST: "{{ thanos_querier_route_host.resources[0].spec.host }}"
        TOKEN: "{{ access_token.stdout.strip('\"') }}"
        NAMESPACE: "{{ user_defined_namespace }}"
      register: query_output

    - debug:
        msg: "{{ query_output.stdout_lines }}"

    - name: Create a app directory with the input name
      file:
        path: "~/{{ user_defined_app_name }}"
        state: directory
        mode: 0755   

    - name: Copy the query output to the file
      copy:
        content: |
          Following output shows the duration that your application pods have been up-

          {{ query_output.stdout_lines }}
        dest: "~/{{ user_defined_app_name }}/output.txt"

    - name: Clean up the resources for monitoring user defined projects
      include_tasks: "{{ role_path }}/tasks/cleanup.yml"
    
    - name: Disable the user-workload-monitoring
      shell: | 
        oc patch configmap cluster-monitoring-config \
        -n openshift-monitoring --type='json' \ 
        -p '[{"op": "replace", "path": "/data/config.yaml", "value": "enabledUserWorkload: false\n"}]' 
  ignore_errors: true
