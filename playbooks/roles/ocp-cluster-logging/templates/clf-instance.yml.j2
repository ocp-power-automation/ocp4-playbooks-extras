- name: Create an ClusterLogForwarder instance
  k8s:
    state: present
    definition:
      apiVersion: logging.openshift.io/v1
      kind: ClusterLogForwarder
      metadata:
        name: instance 
        namespace: openshift-logging 
      spec:
        outputDefaults:
          elasticsearch:
            structuredTypeKey: openshift.labels.logs
        outputs:
{% if elasticsearch_server_url is defined %}
        - name: elasticsearch-insecure
          type: elasticsearch
          url: "{{ elasticsearch_server_url }}" 
          outputDefaults:
            elasticsearch:
              structuredTypeKey: kubernetes.namespace_name
              structuredTypeName: fall-in-index
{% endif %}
{% if syslog_server_url is defined %}
        - name: rsyslog-application
          type: syslog 
          syslog: 
            appName: "app-logs"
            facility: user
            rfc: RFC5424
            msgID: mymsg
            procID: myproc
            severity: informational
          url: "{{ syslog_server_url }}"
{% if 'tls' in syslog_server_url %}
          secret: 
              name: syslog-secret
{% endif %}
        - name: rsyslog-infra
          type: syslog 
          syslog: 
            appName: "infra-logs"
            facility: user
            rfc: RFC5424
            msgID: mymsg
            procID: myproc
            severity: informational
          url: "{{ syslog_server_url }}"
{% if 'tls' in syslog_server_url %}
          secret: 
              name: syslog-secret
{% endif %}
        - name: rsyslog-audit
          type: syslog 
          syslog: 
            appName: "audit-logs"
            facility: user
            rfc: RFC5424
            msgID: mymsg
            procID: myproc
            severity: informational
          url: "{{ syslog_server_url }}"
{% if 'tls' in syslog_server_url %}
          secret: 
              name: syslog-secret
{% endif %}
{% endif %}
{% if kafka_server_url is defined %}
        - name: kafka-app-logs
          type: kafka
          url: "{{ kafka_server_url }}/{{ app_log_label }}"
        - name: kafka-infra-logs
          type: kafka
          url: "{{ kafka_server_url }}/{{ infra_log_label }}"
        - name: kafka-audit-logs
          type: kafka
          url: "{{ kafka_server_url }}/{{ audit_log_label }}"
{% endif %}
{% if fluentd_server_url is defined %}
        - name: fluentd-server-insecure
          type: fluentdForward
          url: "{{ fluentd_server_url }}"
{% endif %}
{% if loki_server_url is defined %}
        - name: loki-server
          type: "loki"
          url: "{{ loki_server_url }}"
{% endif %}
{% if cw_secret is defined %}
        - name: cloudwatch
          type: cloudwatch
          cloudwatch:
            groupBy: logType
            region: "{{ aws_cw_region }}"
          secret:
            name: "{{ cw_secret }}"
{% endif %}
        pipelines:
        - name: application-logs
          inputRefs: 
          - application
          outputRefs:
{% if elasticsearch_server_url is defined %}
          - elasticsearch-insecure
{% endif %}
{% if syslog_server_url is defined %}
          - rsyslog-application
{% endif %}
{% if kafka_server_url is defined %}
          - kafka-app-logs
{% endif %}
{% if fluentd_server_url is defined %}
          - fluentd-server-insecure
{% endif %}
{% if loki_server_url is defined %}
          - loki-server
{% endif %}
{% if cw_secret is defined %}
          - cloudwatch
{% endif %}
          - default
          parse: json 
          labels:
            logs: "{{ app_log_label }}"
        - name: infrastructure-logs 
          inputRefs:
          - infrastructure
          outputRefs:
{% if elasticsearch_server_url is defined %}
          - elasticsearch-insecure
{% endif %}
{% if syslog_server_url is defined %}
          - rsyslog-infra
{% endif %}
{% if kafka_server_url is defined %}
          - kafka-infra-logs
{% endif %}
{% if fluentd_server_url is defined %}
          - fluentd-server-insecure
{% endif %}
{% if loki_server_url is defined %}
          - loki-server
{% endif %}
{% if cw_secret is defined %}
          - cloudwatch
{% endif %}
          - default
          parse: json 
          labels:
            logs: "{{ infra_log_label }}"
        - name: audit-logs 
          inputRefs:
          - audit
          outputRefs:
{% if elasticsearch_server_url is defined %}
          - elasticsearch-insecure
{% endif %}
{% if syslog_server_url is defined %}
          - rsyslog-audit
{% endif %}
{% if kafka_server_url is defined %}
          - kafka-audit-logs
{% endif %}
{% if fluentd_server_url is defined %}
          - fluentd-server-insecure
{% endif %}
{% if loki_server_url is defined %}
          - loki-server
{% endif %}
{% if cw_secret is defined %}
          - cloudwatch
{% endif %}
          - default
          parse: json 
          labels: 
            logs: "{{ audit_log_label }}"
  register: clf_cr

- name: Check the logging Pods are restarting if CR for CLF has changed
  block:
    # check pods are in restarting state
    - name: Check the logging Pods are restarting
      shell: oc get pods -n openshift-logging --no-headers | awk '{if ($3 == "Terminating" ) print $1}' | wc -l
      register: pods
      until: pods.stdout|int > 0
      retries: 20
      delay: 5
      ignore_errors: yes

    - name: Delete PODs if not restarted Automatic
      shell: oc delete pod $(kubectl get pods -n openshift-logging| grep 'fluent\|collector' | awk '{print $1}') -n openshift-logging
      when: pods.failed
  when: clf_cr.changed
