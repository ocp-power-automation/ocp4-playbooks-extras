---
# Set elasticsearch_server_url
- block:
  - name: Check Elasticsearch URL is reachable or not
    uri:
      url: "{{ elasticsearch_url }}"
    register: op

  - set_fact:
      elasticsearch_server_url: "{{ elasticsearch_url }}"
    when: op.failed == false
  ignore_errors: yes
  when: elasticsearch_url != "" and elasticsearch_url != None
  
# Set loki_server_url
- set_fact:
    loki_server_url: "{{ loki_url }}"
  when: loki_url != "" and loki_url != None

# Check if the secret for AWS is exists and set_fact
- block:
  - name: Check if secret "{{ cloudwatch_secret }}" is exists in the openshift-logging namespace
    shell: oc get secret "{{ cloudwatch_secret }}" -n openshift-logging 
    register: aws_secret

  # Set cw_secret
  - set_fact:
      cw_secret: "{{ cloudwatch_secret }}"
    when: aws_secret.failed == false
    
  # Set aws_region
  - set_fact:
      aws_cw_region: "{{ aws_region | default('ap-south-1', true)}}"
  ignore_errors: yes
  when: cloudwatch_secret != "" and cloudwatch_secret != None

# Extracts host names and ports from external systems URLs
- name: Get host and ports from URLs
  shell: | 
    echo "{{item}}" | sed -e 's/[^/]*\/\/\([^@]*@\)\?\([^:/]*\).*/\2/'
    grep -oE '[0-9]{4,5}' <<< "{{item}}"
  register: host_and_port
  ignore_errors: yes
  loop:
    - "{{ syslog_url | default('1.1.1.1:6514', true)}}}}"
    - "{{ fluentd_url | default('1.1.1.1:24224', true)}} }}"
    - "{{ kafka_url | default('1.1.1.1:9092', true)}}}}"

# Create list of host names
- set_fact:
    host_names: "{{ host_names | default([]) + [item[0] | default('1.1.1.1', true)] }}"
  loop: "{{ host_and_port.results | map(attribute='stdout_lines')| list }}"

# Create list of ports
- set_fact:
    ports: "{{ ports | default([]) + [item[1] | default('1111', true)] }}"
  loop: "{{ host_and_port.results | map(attribute='stdout_lines')| list }}"

# Validate if external system is rechable
- wait_for: host={{item.0}} port={{item.1}} timeout=5
  ignore_errors: yes
  register: output
  with_together:
  - "{{ host_names }}"
  - "{{ ports }}"

# Set facts for Syslog, Fluentd and Kafka URLs if URL is valid
- set_fact:
    syslog_server_url: "{{syslog_url}}"
    syslog_host: "{{host_names.0}}"
  when: output.results[0].failed == false

- set_fact:
    fluentd_server_url: "{{fluentd_url}}"
    fluent_host: "{{host_names.1}}"
  when: output.results[1].failed == false

- set_fact:
    kafka_server_url: "{{kafka_url}}"
    kafka_host: "{{host_names.2}}"
  when: output.results[2].failed == false

- block:
  - name: Fail if Elasticsearch URL is unreachable
    fail:
      msg: "Elasticsearch URL is invalid or unreachable"
    when: elasticsearch_url != "" and elasticsearch_url != None and elasticsearch_server_url is undefined

  - name: Fail if Syslog URL is unreachable
    fail:
      msg: "Syslog URL is invalid or unreachable"
    when: syslog_url != "" and syslog_url != None and syslog_server_url is undefined

  - name: Fail if Fluentd URL is unreachable
    fail:
      msg: "Fluentd URL is invalid or unreachable"
    when: fluentd_url != "" and fluentd_url != None and fluentd_server_url is undefined

  - name: Fail if Kafka URL is unreachable
    fail:
      msg: "Kafka URL is invalid or unreachable"
    when: kafka_url != "" and kafka_url != None and kafka_server_url is undefined

  - name: Fail if Loki URL is unreachable
    fail:
      msg: "Loki URL is invalid or unreachable"
    when: loki_url != "" and loki_url != None and loki_server_url is undefined

  - name: Fail if AWS CloudWatch secret is not present
    fail:
      msg: "AWS CloudWatch secret is not present"
    when: cloudwatch_secret != "" and cloudwatch_secret != None and cw_secret is undefined

# Set default value for Syslog host URL if other urls are empty and cluster_log_forwarder variable is set to true
- set_fact:
    syslog_server_url: "tls://rsyslogserver.east.example.com:514"
  when:
    - elasticsearch_server_url is undefined and syslog_server_url is undefined
    - fluentd_server_url is undefined and kafka_server_url is undefined
    - loki_server_url is undefined and cw_secret is undefined
