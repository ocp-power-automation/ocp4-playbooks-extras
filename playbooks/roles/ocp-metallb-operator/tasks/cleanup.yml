---
# Clean up the existing MetalLB operator resources if any before proceeding with the new deployment
- name: Clean up
  block:
  - name: Get the name of cluster service version
    shell: oc get clusterserviceversion -n metallb-system | awk '{ if ($1 ~ /metallb/) print $1 }'
    register: metallb_csv

  - name: Get the name of subscription
    shell: oc get subscription -n metallb-system | awk '{ if ($1 ~ /metallb/) print $1 }'
    register: metallb_subscription

  - name: Get the name of operator group
    shell: oc get operatorgroup -n metallb-system | awk '{ if ($1 ~ /metallb/) print $1 }'
    register: metallb_operator_group

  - name: Delete the instance of metallb operator
    include_tasks: operator-cleanup.yml

  - name: Delete the subscription if exists
    kubernetes.core.k8s:
      state: absent
      api_version: operators.coreos.com/v1alpha1
      kind: Subscription
      name: "{{ metallb_subscription.stdout }}"
      namespace: "{{ metallb_namespace }}"
    when: metallb_subscription.stdout|length > 0

  - name: Delete the operator group if exists
    kubernetes.core.k8s:
      state: absent
      api_version: operators.coreos.com/v1
      kind: OperatorGroup
      name: "{{ metallb_operator_group.stdout }}"
      namespace: "{{ metallb_namespace }}"
    when: metallb_operator_group.stdout|length > 0

  - name: Delete the cluster service version if exists
    kubernetes.core.k8s:
      state: absent
      api_version: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      name: "{{ metallb_csv.stdout }}"
      namespace: "{{ metallb_namespace }}"
    when: metallb_csv.stdout|length > 0

  - name: Check if all the pods has been deleted
    shell: oc get pods -n metallb-system --no-headers | wc -l
    register: metallb_pods
    until: metallb_pods.stdout|int == 0
    retries: 15
    delay: 60

  - name: Get custom resource definitions
    shell: oc get crd | awk '{print $1}'| grep metallb
    register: metallb_crds
    ignore_errors: true

  - name: Delete the custom resource definition if exists
    shell: oc delete crd {{ item }}
    loop: "{{ metallb_crds.stdout_lines }}"
    when: metallb_crds.stdout_lines|length > 0

  - name: Delete the MetalLB Operator if exists
    kubernetes.core.k8s:
      state: absent
      kind: Operator
      name: metallb-operator.metallb-system

  - name: Delete the namespace if exists
    kubernetes.core.k8s:
      state: absent
      kind: Namespace
      name: "{{ metallb_namespace }}"

  - name: Check if the namespace gets deleted
    shell: oc get namespace --no-headers | grep metallb | wc -l
    register: metallb_namespace
    until: metallb_namespace.stdout|int == 0
    retries: 15
    delay: 30

  - name: Delete the workspace
    file:
      path: "{{ metallb_directory }}"
      state: "absent"
      mode: '0755'
  when: metallb_cleanup
