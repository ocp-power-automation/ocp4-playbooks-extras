---
# check if Cluster Health is good
- name: Invoke the role check-cluster-health to check cluster status
  include_role:
    name: check-cluster-health

- name: Check if etcd datastore is encrypted
  shell: oc get apiserver cluster -o jsonpath='{.spec.encryption.type}'
  register: encrypt_status

- name: Decrypt the cluster
  include_tasks: decrypt_etcd.yaml
  when: 
    - encrypt_status.stdout != encryption_type
    - encrypt_status.stdout != ""

- name: Encrypt the cluster
  include_tasks: encrypt_etcd.yaml
  when: encrypt_status.stdout != encryption_type
        
- name: Place secrets collecter script in etcd pod
  kubernetes.core.k8s_cp:
    namespace: openshift-etcd
    pod: etcd-master-0
    container: etcd
    local_path: "{{ role_path }}/files/secret.sh"
    remote_path: /tmp/secret.sh
    state: to_pod

- name: Execute secret collecter script in etcd pod to collect encrypted value of secrets before key rotation
  kubernetes.core.k8s_exec:
    namespace: openshift-etcd
    pod: etcd-master-0
    container: etcd
    command: /tmp/secret.sh "{{ NUMBER }}" "{{ encryption_type }}"
  register: script_output_1
    
- debug:
    msg: "{{ script_output_1.stdout_lines }}"

- name: Rotate encryption key for Openshift API server
  shell: |
    oc patch openshiftapiserver cluster --type merge -p "
    spec:
      unsupportedConfigOverrides:
        encryption:
          reason: force OAS rotation `date` 
    "

- name: Rotate encryption key for Kubernetes API server
  shell: |
    oc patch kubeapiserver cluster --type merge -p "
    spec:
      unsupportedConfigOverrides:
        encryption:
          reason: force KAS rotation `date`
    "

- name: Increment NUMBER variable
  set_fact:
    NUMBER: "{{ NUMBER + 1 }}"

- name: Verify new encryption key secrets are created
  shell: oc get secret -n openshift-config-managed --no-headers | grep enc | grep "\-{{ NUMBER }}" | wc -l
  register: enc_secrets
  until: enc_secrets.stdout|int >= 2 and enc_secrets.stderr == ""
  retries: 10
  delay: 120

- name: Verify all apiserver pods are in running state
  shell: oc get pods -A --no-headers | grep apiserver | grep -vi "Running\|Completed" | wc -l
  register: api_pods
  until: api_pods.stdout|int == 0 and api_pods.stderr == ""
  retries: 10
  delay: 120

- name: Verify all kube-apiserver pods are in running state
  shell: oc get pods -n openshift-kube-apiserver --no-headers | grep -vi "Running\|Completed" | wc -l
  register: kubeapi_pods
  until: kubeapi_pods.stdout|int == 0 and api_pods.stderr == ""
  retries: 10
  delay: 120

- name: Verify that etcd encryption with new key was successful
  shell: oc get openshiftapiserver -o=jsonpath='{range .items[0].status.conditions[?(@.type=="APIServerDeploymentDegraded")]}{.status}{"\n"}'
  register: encryption_with_new_key_status
  until: encryption_with_new_key_status.stdout == "False"
  retries: 10
  delay: 300
  ignore_errors: true

- name: Fail when Encrypted status for the OpenShift OAuth API server was not successful
  fail:
    msg: "Encryption has not completed"
  when: encryption_with_new_key_status.failed

- name: Verify that etcd encryption with new key was successful for the Kubernetes API server
  shell: oc get kubeapiserver -o=jsonpath='{range .items[0].status.conditions[?(@.type=="InstallerControllerDegraded")]}{.status}{"\n"}'
  register: encryption_with_new_key_k8s_status
  until: encryption_with_new_key_k8s_status.stdout == "False"
  retries: 10
  delay: 300
  ignore_errors: true

- name: Fail when Encrypted status for the OpenShift OAuth API server was not successful
  fail:
    msg: "Encryption has not completed"
  when: encryption_with_new_key_k8s_status.failed

- name: Wait till all the secrets in the cluster are encrypted with new key
  pause:
    minutes: 15

- name: Place secrets collecter script in etcd pod
  kubernetes.core.k8s_cp:
    namespace: openshift-etcd
    pod: etcd-master-0
    container: etcd
    local_path: "{{ role_path }}/files/secret.sh"
    remote_path: /tmp/secret.sh
    state: to_pod

- name: Execute secret collecter script in etcd pod to collect encrypted value of secrets after key rotation
  kubernetes.core.k8s_exec:
    namespace: openshift-etcd
    pod: etcd-master-0
    container: etcd
    command: /tmp/secret.sh "{{ NUMBER }}" "{{ encryption_type }}"
  register: script_output_2
    
- debug:
    msg: "{{ script_output_2.stdout_lines }}"

