# Cluster health check

- name: Invoke the role check-cluster-health to check cluster status
  include_role:
    name: check-cluster-health

- name: Get the ocp server version
  shell: oc version | grep  "Server Version" | awk '{print $3}' | cut -d . -f 1,2
  register: ocp_version

- set_fact:
    ocp_version: "{{ ocp_version }}"

- name: Cluster Observability Operator deployment
  block:
    - name: Setup a catalogsource for installing cluster observability operator
      block:
        - name: Include the global pull-secret update role to extract podman-secret
          include_role:
            name: global-secret-update

        - name: Create ImageContentSourcePolicy
          k8s:
            state: present
            definition:
              apiVersion: operator.openshift.io/v1alpha1
              kind: ImageContentSourcePolicy
              metadata:
                name: brew-registry
              spec:
                repositoryDigestMirrors:
                - mirrors:
                  - brew.registry.redhat.io
                  source: registry.redhat.io
                - mirrors:
                  - brew.registry.redhat.io
                  source: registry-proxy.engineering.redhat.com
          when: ocp_version | float == 4.12

        - name: Create ImageDigestMirrorSet
          k8s:
            state: present
            definition:
              apiVersion: config.openshift.io/v1
              kind: ImageDigestMirrorSet
              metadata:
                name: idms-coo
              spec:
                imageDigestMirrors:
                - mirrors:
                  - quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator
                  source: registry.redhat.io/cluster-observability-operator
                - mirrors:
                  - brew.registry.redhat.io
                  source: registry.redhat.io
                - mirrors:
                  - brew.registry.redhat.io
                  source: registry-proxy.engineering.redhat.com
                - mirrors:
                  - brew.registry.redhat.io
                  source: registry.stage.redhat.io
          when: ocp_version | float >= 4.13

        # Create custom CatalogSource
        - name: Create a custom CatalogSource
          k8s:
            state: present
            definition:
              apiVersion: operators.coreos.com/v1alpha1
              kind: CatalogSource
              metadata:
                name: "{{ coo_catalogsource_name }}"
                namespace: openshift-marketplace
              spec:
                displayName: coo-catalog
                image: "{{ coo_catalogsource_image }}"
                sourceType: grpc
      when: coo_catalogsource_image != '' or coo_catalogsource_image != None

    - name: Create a target namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: openshift-cluster-observability-operator
    
    - name: Create a OperatorGroup into target namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: coo-og
            namespace:  openshift-cluster-observability-operator
            labels:
              og_label: openshift-observability-operator
    
    - name: Create a subscription for cluster observability operator
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: cluster-observability-subscription
            namespace: openshift-cluster-observability-operator
            labels:
              operators.coreos.com/observability-operator.openshift-operators: ""
          spec:
            channel: "{{ coo_channel }}"
            installPlanApproval: Automatic
            name: cluster-observability-operator
            source: "{{ coo_catalogsource_name }}"
            sourceNamespace: openshift-marketplace

    - name: Verfiy cluster observability operator installation
      shell: oc get pods -n openshift-cluster-observability-operator --no-headers | grep -v "Running\|Completed" | wc -l
      register: coo_pods
      until: coo_pods.stdout|int == 0 and coo_pods.stderr == ""
      retries: 10
      delay: 30
  environment: "{{ coo_e2e_env }}"
  when: coo_operator_deploy
